{"version":3,"file":"static/js/500.eb63005b.chunk.js","mappings":"oOACA,EAAwB,yBAAxB,EAA0D,0B,SCmC1D,MAjCA,YAAkC,IAAbA,EAAY,EAAZA,SACjB,GAAsCC,EAAAA,EAAAA,UAAS,IAA/C,eAAOC,EAAP,KAAoBC,EAApB,KAeA,OACI,kBAAMH,SAVW,SAAAI,GAEjB,GADAA,EAAMC,iBACqB,KAAvBH,EAAYI,OACZ,OAAOC,MAAM,0BAEjBP,EAASE,GACTC,EAAe,KAIf,WACI,kBACIK,UAAWC,EACXC,KAAK,OACLC,YAAY,cACZC,MAAOV,EACPW,SApBc,SAAAT,GACtBD,EAAeC,EAAMU,cAAcF,MAAMG,mBAqBrC,mBAAQP,UAAWC,EAAUC,KAAK,SAAlC,UACI,2CC5BhB,EAAuB,qBC4CvB,MAtCA,WAAmB,IAAD,EACd,GAAwCM,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACA,GAAsCjB,EAAAA,EAAAA,UAAQ,UAACgB,EAAaE,IAAI,gBAAlB,QAA8B,IAA5E,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAA4BpB,EAAAA,EAAAA,UAAS,IAArC,eAAOqB,EAAP,KAAeC,EAAf,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OARAC,EAAAA,EAAAA,YAAU,WACDN,IAGLO,EAAAA,EAAAA,IAAiBP,GAAaQ,MAAK,SAAAC,GAAQ,OAAIN,EAAUM,EAASC,cACnE,CAACV,KAIA,iCACI,SAAC,EAAD,CAAWpB,SAhBM,SAAAoB,GACrBC,EAAeD,GACfF,EAAgB,CAAEa,MAAOX,IACzBG,EAAU,OAcLD,IACG,eAAId,UAAWC,EAAf,SACKa,EAAOU,KAAI,SAAAC,GAAK,OACb,yBACI,SAAC,KAAD,CAAMC,GAAE,UAAKD,EAAME,IAAMC,MAAO,CAAEC,KAAMb,GAAxC,SACKS,EAAMK,SAFNL,EAAME,c,oLCjCjCI,EAAW,+BACJC,EAAU,mCAAhB,SAGQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SAC2BC,MAAMF,EAAKC,GADtC,YACUd,EADV,QAEoBgB,GAFpB,iCAGgBhB,EAASiB,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACZ,OAAOT,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,IAI1D,SAASb,EAAiBP,GAC7B,OAAOqB,EAAY,GAAD,OACXF,EADW,iCACsBC,EADtB,kBACuCpB,IAKtD,SAAS+B,EAAkBC,GAC9B,OAAOX,EAAY,GAAD,OAAIF,EAAJ,kBAAsBa,EAAtB,oBAAyCZ,IAIxD,SAASa,EAAkBD,GAC9B,OAAOX,EAAY,GAAD,OACXF,EADW,kBACOa,EADP,4BACkCZ,IAKjD,SAASc,EAAkBF,GAC9B,OAAOX,EAAY,GAAD,OACXF,EADW,kBACOa,EADP,4BACkCZ","sources":["webpack://react-homework-template/./src/components/Searchbar/Searchbar.module.css?8d9e","components/Searchbar/Searchbar.js","webpack://react-homework-template/./src/pages/Movies/Movies.module.css?82ee","pages/Movies/Movies.js","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"Searchbar_input__19umw\",\"button\":\"Searchbar_button__nkcjk\"};","import { useState } from \"react\";\nimport s from './Searchbar.module.css';\n\nfunction Searchbar({ onSubmit }) {\n    const [filmRequest, setFilmRequest] = useState('');\n\n    const handleInputChange = event => {\n        setFilmRequest(event.currentTarget.value.toLowerCase())\n    };\n\n    const handleSubmit = event => {\n        event.preventDefault();\n        if (filmRequest.trim() === '') {\n            return alert('Search field is empty!');\n        }\n        onSubmit(filmRequest);\n        setFilmRequest('');\n    };\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <input   \n                className={s.input}\n                type=\"text\"\n                placeholder=\"Search film\"\n                value={filmRequest}\n                onChange={handleInputChange}\n            />\n            <button className={s.button} type=\"submit\">\n                <span >Search</span>\n            </button>\n        </form>\n    );\n};\n\n\nexport default Searchbar;","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Movies_list__hqYjd\"};","import { useState, useEffect } from \"react\";\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\nimport { fetchSearchMovie } from \"service/api\";\nimport Searchbar from \"components/Searchbar/Searchbar\";\nimport s from './Movies.module.css'\n\n\nfunction Movies() {\n    const [searchParams, setSearchParams] = useSearchParams();\n    const [searchQuery, setSearchQuery] = useState(searchParams.get('query') ?? '');\n    const [movies, setMovies] = useState([]);\n    const location = useLocation();\n\n    const handleFormSubmit = searchQuery => {\n        setSearchQuery(searchQuery);\n        setSearchParams({ query: searchQuery });\n        setMovies([]);\n    };\n\n    useEffect(() => {\n        if (!searchQuery) {\n            return;\n        }\n        fetchSearchMovie(searchQuery).then(response => setMovies(response.results));\n    }, [searchQuery]);\n\n\n    return (\n        <>\n            <Searchbar onSubmit={handleFormSubmit} />\n            {movies && (\n                <ul className={s.list}>\n                    {movies.map(movie => (\n                        <li key={movie.id}>\n                            <Link to={`${movie.id}`} state={{ from: location }}>\n                                {movie.title}\n                            </Link>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </>\n    )\n}\n\nexport default Movies;","const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'dd06e17bf41b8c1999e9b262a8aaf7ee';\n\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\n// Запит на список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport function fetchTrending() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\n// Запит на пошук фільму за ключовим словом на сторінці фільмів.\nexport function fetchSearchMovie(searchQuery) {\n    return fetchMovies(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n}\n\n// Запит повної інформації про фільм для сторінки кінофільму.\nexport function fetchMovieDetails(movieId) {\n    return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\n// Запит інформації про акторський склад для сторінки кінофільму.\nexport function fetchMovieCredits(movieId) {\n    return fetchMovies(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n}\n\n// Запит оглядів для сторінки кінофільму.\nexport function fetchMovieReviews(movieId) {\n    return fetchMovies(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n}\n\n"],"names":["onSubmit","useState","filmRequest","setFilmRequest","event","preventDefault","trim","alert","className","s","type","placeholder","value","onChange","currentTarget","toLowerCase","useSearchParams","searchParams","setSearchParams","get","searchQuery","setSearchQuery","movies","setMovies","location","useLocation","useEffect","fetchSearchMovie","then","response","results","query","map","movie","to","id","state","from","title","BASE_URL","API_KEY","fetchMovies","url","config","fetch","ok","json","Promise","reject","Error","fetchTrending","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}