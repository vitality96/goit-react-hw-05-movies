{"version":3,"file":"static/js/914.75c8ed4c.chunk.js","mappings":"oOACA,EAAyB,6BAAzB,EAAkE,gCAAlE,EAA6G,+BAA7G,EAAsJ,8BAAtJ,EAA+L,+BAA/L,EAAuO,6BAAvO,EAA2Q,2BAA3Q,EAA6S,2BAA7S,EAAgV,4BAAhV,EAAwX,gCAAxX,EAAma,+B,SCKpZ,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,MAAnC,eAAOC,EAAP,KAAcC,EAAd,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAUjB,OAJAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBV,GAASW,KAAKP,KACjC,CAACJ,KAGA,iCACI,mBAAQY,UAAWC,EAAUC,QAVtB,kBAAMT,EACjBE,EAASQ,MAAT,UAAoBR,EAASQ,MAAMC,KAAKC,UAAxC,OAAmDV,EAASQ,MAAMC,KAAKE,QAAW,aAS9E,qBACCf,IACG,iCACI,iBAAKS,UAAWC,EAAhB,WACA,gBAAKM,IAAG,yCAAoChB,EAAMiB,aAAeC,MAAM,MAAMC,IAAKnB,EAAMoB,SACxF,iBAAKX,UAAWC,EAAhB,WACI,wBAAKV,EAAMoB,SACf,eAAGX,UAAWC,EAAd,2BAAwCV,EAAMqB,iBAC9C,cAAGZ,UAAWC,EAAd,wBACA,uBAAIV,EAAMsB,YACV,cAAGb,UAAWC,EAAd,qBACCV,EAAMuB,SACH,eAAId,UAAWC,EAAf,SACKV,EAAMuB,OAAOC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACd,eAAIjB,UAAWC,EAAf,SAAiCgB,GAALD,eAMxC,mBACA,eAAIhB,UAAWC,EAAf,qCACA,gBAAID,UAAWC,EAAf,WACI,eAAID,UAAWC,EAAf,UAA2B,SAAC,KAAD,CAASiB,GAAG,OAAOf,MAAOR,EAASQ,MAAQ,CAAEC,KAAMT,EAASQ,MAAMC,MAAS,KAA3E,qBAC3B,eAAIJ,UAAWC,EAAf,UAA2B,SAAC,KAAD,CAASiB,GAAG,UAAUf,MAAOR,EAASQ,MAAQ,CAAEC,KAAMT,EAASQ,MAAMC,MAAS,KAA9E,2BAE/B,mBACA,SAAC,KAAD,Y,oLCjDde,EAAW,+BACJC,EAAU,mCAAhB,SAGQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACZ,OAAOV,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,IAI1D,SAASY,EAAiBC,GAC7B,OAAOZ,EAAY,GAAD,OACXF,EADW,iCACsBC,EADtB,kBACuCa,IAKtD,SAASnC,EAAkBV,GAC9B,OAAOiC,EAAY,GAAD,OAAIF,EAAJ,kBAAsB/B,EAAtB,oBAAyCgC,IAIxD,SAASc,EAAkB9C,GAC9B,OAAOiC,EAAY,GAAD,OACXF,EADW,kBACO/B,EADP,4BACkCgC,IAKjD,SAASe,EAAkB/C,GAC9B,OAAOiC,EAAY,GAAD,OACXF,EADW,kBACO/B,EADP,4BACkCgC","sources":["webpack://react-homework-template/./src/pages/MovieDetails/MovieDetails.module.css?0c24","pages/MovieDetails/MovieDetails.js","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"button\":\"MovieDetails_button__uXZxd\",\"container\":\"MovieDetails_container__Ys+c9\",\"centered\":\"MovieDetails_centered__WyYRe\",\"avarage\":\"MovieDetails_avarage__5HTyD\",\"overview\":\"MovieDetails_overview__U5Vnb\",\"genres\":\"MovieDetails_genres__Pnmgt\",\"list\":\"MovieDetails_list__dbNMP\",\"item\":\"MovieDetails_item__mbUY+\",\"title\":\"MovieDetails_title__cUGs9\",\"listStyle\":\"MovieDetails_listStyle__KXGPQ\",\"itemList\":\"MovieDetails_itemList__p4Cra\"};","import { useParams, NavLink, Outlet, useNavigate, useLocation } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieDetails } from \"service/api\";\nimport s from './MovieDetails.module.css'\n\n\nexport default function MovieDetails() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState(null);\n    const navigate = useNavigate();\n    const location = useLocation();\n\n    const goBack = () => navigate(\n        location.state ? `${location.state.from.pathname}${location.state.from.search}` : './movies'\n    );\n\n    useEffect(() => {\n        fetchMovieDetails(movieId).then(setMovie);\n    }, [movieId]);\n\n    return (\n        <>\n            <button className={s.button} onClick={goBack}>Go Back</button>\n            {movie && (\n                <>\n                    <div className={s.container}>\n                    <img src={`https://image.tmdb.org/t/p/w300${movie.poster_path}`} width=\"300\" alt={movie.title}></img>\n                    <div className={s.centered}>\n                        <h2>{movie.title}</h2>\n                    <p className={s.avarage}>Vote avarage: {movie.vote_average}</p>\n                    <p className={s.overview}>Overview:</p>\n                    <p>{movie.overview}</p>\n                    <p className={s.genres}>Genres:</p>\n                    {movie.genres && (\n                        <ul className={s.list}>\n                            {movie.genres.map(({ id, name }) => (\n                                <li className={s.item} key={id}>{name}</li>\n                            ))}\n                        </ul>\n                            )}\n                            </div>\n                        </div>\n                    <hr />\n                    <h3 className={s.title}>Additional information</h3>\n                    <ul className={s.listStyle}>\n                        <li className={s.itemList}><NavLink to=\"cast\" state={location.state ? { from: location.state.from } : null}>Cast</NavLink></li>\n                        <li className={s.itemList}><NavLink to=\"reviews\" state={location.state ? { from: location.state.from } : null}>Reviews</NavLink></li>\n                    </ul>\n                    <hr />\n                    <Outlet />\n                </>\n            )}\n        </>\n    );\n};","const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'dd06e17bf41b8c1999e9b262a8aaf7ee';\n\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\n// Запит на список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport function fetchTrending() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\n// Запит на пошук фільму за ключовим словом на сторінці фільмів.\nexport function fetchSearchMovie(searchQuery) {\n    return fetchMovies(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n}\n\n// Запит повної інформації про фільм для сторінки кінофільму.\nexport function fetchMovieDetails(movieId) {\n    return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\n// Запит інформації про акторський склад для сторінки кінофільму.\nexport function fetchMovieCredits(movieId) {\n    return fetchMovies(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n}\n\n// Запит оглядів для сторінки кінофільму.\nexport function fetchMovieReviews(movieId) {\n    return fetchMovies(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n}\n\n"],"names":["MovieDetails","movieId","useParams","useState","movie","setMovie","navigate","useNavigate","location","useLocation","useEffect","fetchMovieDetails","then","className","s","onClick","state","from","pathname","search","src","poster_path","width","alt","title","vote_average","overview","genres","map","id","name","to","BASE_URL","API_KEY","fetchMovies","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrending","fetchSearchMovie","searchQuery","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}