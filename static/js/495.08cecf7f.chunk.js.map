{"version":3,"file":"static/js/495.08cecf7f.chunk.js","mappings":"2NACA,GAAgB,KAAO,mBAAmB,KAAO,mBAAmB,SAAW,wB,SCIhE,SAASA,IACpB,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA0BE,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KAOA,OALAC,EAAAA,EAAAA,YAAU,YACVC,EAAAA,EAAAA,IAAkBN,GAASO,MAAK,SAAAC,GAAQ,OAAIJ,EAASI,EAASC,WAC3D,CAACT,KAIA,gBAAKU,UAAWC,EAAAA,UAAhB,SACKR,IACG,eAAIO,UAAWC,EAAAA,KAAf,SACKR,EAAMS,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,aAAcC,EAA3B,EAA2BA,UAA3B,OACP,0BACKD,GACI,gBAAKE,IAAG,yCAAoCF,GACzCG,IAAKJ,KACR,gBAAKG,IAAI,mFACVC,IAAKJ,EAAMK,MAAM,MAAMC,OAAO,SAClC,cAAGV,UAAWC,EAAAA,KAAd,SAAuBG,KACvB,cAAGJ,UAAWC,EAAAA,SAAd,SAA2BK,MAPtBH,Y,oLCnB3BQ,EAAW,+BACJC,EAAU,mCAAhB,SAGQC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAA2BC,EAA3B,+BAAiC,GAAIC,EAArC,+BAA8C,GAA9C,SAC2BC,MAAMF,EAAKC,GADtC,YACUjB,EADV,QAEoBmB,GAFpB,iCAGgBnB,EAASoB,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACZ,OAAOT,EAAY,GAAD,OAAIF,EAAJ,uCAA2CC,IAI1D,SAASW,EAAiBC,GAC7B,OAAOX,EAAY,GAAD,OACXF,EADW,iCACsBC,EADtB,kBACuCY,IAKtD,SAASC,EAAkBnC,GAC9B,OAAOuB,EAAY,GAAD,OAAIF,EAAJ,kBAAsBrB,EAAtB,oBAAyCsB,IAIxD,SAAShB,EAAkBN,GAC9B,OAAOuB,EAAY,GAAD,OACXF,EADW,kBACOrB,EADP,4BACkCsB,IAKjD,SAASc,EAAkBpC,GAC9B,OAAOuB,EAAY,GAAD,OACXF,EADW,kBACOrB,EADP,4BACkCsB","sources":["webpack://react-homework-template/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/Cast.js","service/api.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"text\":\"Cast_text__jl3u+\",\"subtitle\":\"Cast_subtitle__yd9sO\"};","import { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport { fetchMovieCredits } from \"service/api\";\nimport s from './Cast.module.css'\n\nexport default function Cast() {\n    const { movieId } = useParams();\n    const [movie, setMovie] = useState([]);\n    \n    useEffect(() => {\n    fetchMovieCredits(movieId).then(response => setMovie(response.cast));\n    }, [movieId]);\n\n        \n    return (\n        <div className={s.container}>\n            {movie && (\n                <ul className={s.list}>\n                    {movie.map(({ id, name, profile_path, character }) => (\n                        <li key={id}>\n                            {profile_path ? (\n                                (<img src={`https://image.tmdb.org/t/p/w200${profile_path}`}\n                                    alt={name} />)\n                            ) : (<img src=\"https://bitsofco.de/content/images/2018/12/Screenshot-2018-12-16-at-21.06.29.png\"\n                                alt={name} width=\"200\" height=\"300\" />)}\n                            <p className={s.text}>{name}</p>\n                            <p className={s.subtitle}>{character}</p>\n                        </li>\n                    ))}\n                </ul>\n            )}\n        </div>\n    );\n};\n\n\n// https://bitsofco.de/content/images/2018/12/Screenshot-2018-12-16-at-21.06.29.png","const BASE_URL = 'https://api.themoviedb.org/3';\nexport const API_KEY = 'dd06e17bf41b8c1999e9b262a8aaf7ee';\n\n\nasync function fetchMovies(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n\n// Запит на список найпопулярніших фільмів на сьогодні для створення колекції на головній сторінці.\nexport function fetchTrending() {\n    return fetchMovies(`${BASE_URL}/trending/movie/day?api_key=${API_KEY}`);\n}\n\n// Запит на пошук фільму за ключовим словом на сторінці фільмів.\nexport function fetchSearchMovie(searchQuery) {\n    return fetchMovies(\n        `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${searchQuery}`\n    );\n}\n\n// Запит повної інформації про фільм для сторінки кінофільму.\nexport function fetchMovieDetails(movieId) {\n    return fetchMovies(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`);\n}\n\n// Запит інформації про акторський склад для сторінки кінофільму.\nexport function fetchMovieCredits(movieId) {\n    return fetchMovies(\n        `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`\n    );\n}\n\n// Запит оглядів для сторінки кінофільму.\nexport function fetchMovieReviews(movieId) {\n    return fetchMovies(\n        `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`\n    );\n}\n\n"],"names":["Cast","movieId","useParams","useState","movie","setMovie","useEffect","fetchMovieCredits","then","response","cast","className","s","map","id","name","profile_path","character","src","alt","width","height","BASE_URL","API_KEY","fetchMovies","url","config","fetch","ok","json","Promise","reject","Error","fetchTrending","fetchSearchMovie","searchQuery","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}